NFA is as follows:
----------------------------------------
states = {0, 1, 2, 3, 4, 5, 6}
sigma = {'a', 'b'}
start = 0
finals = {4}
delta = {
    (0, '') : {2}
    (0, 'a') : {1}
    (0, 'b') : {0}
    (1, '') : {0, 4}
    (1, 'b') : {3}
    (2, '') : {4}
    (2, 'a') : {1}
    (2, 'b') : {2, 5}
    (3, '') : {4}
    (4, '') : {6}
    (4, 'a') : {4}
    (5, '') : {6}
    (5, 'b') : {5}
    (6, 'a') : {6}
}
----------------------------------------
Equivalent DFA is as follows:
----------------------------------------
states = {1, 2, 3, 4}
sigma = {'a', 'b'}
start = 1
finals = {1, 2, 3, 4}
delta = {
    (1, 'a') : 2
    (1, 'b') : 3
    (2, 'a') : 2
    (2, 'b') : 4
    (3, 'a') : 2
    (3, 'b') : 3
    (4, 'a') : 2
    (4, 'b') : 3
}
----------------------------------------
First partitioning:
 (1, 2, 3, 4)
Final partitioning:
 (1, 2, 3, 4)
states = {(1, 2, 3, 4)}
sigma = {'a', 'b'}
start = (1, 2, 3, 4)
finals = {(1, 2, 3, 4)}
delta = {
    ((1, 2, 3, 4), 'a') : (1, 2, 3, 4)
    ((1, 2, 3, 4), 'b') : (1, 2, 3, 4)
}
----------------------------------------
|1_1_
 0|2_2_
 0 0|3_3_
 0 0 0|4_4_
plist:
[(1, 2, 3, 4)]
states = {(1, 2, 3, 4)}
sigma = {'a', 'b'}
start = (1, 2, 3, 4)
finals = {(1, 2, 3, 4)}
delta = {
    ((1, 2, 3, 4), 'a') : (1, 2, 3, 4)
    ((1, 2, 3, 4), 'b') : (1, 2, 3, 4)
}
----------------------------------------
nmin1.equiv(nmin2) is True
